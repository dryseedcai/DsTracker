apply plugin: 'com.android.application'
apply plugin: 'com.dryseed.dstracker.gradle.dsplugin'

repositories {
    //在libs目录下能找到aar文件
    flatDir {
        dirs 'libs' //this way we can find the .aar file in libs folder
    }
}

android {
    compileSdkVersion 26
    buildToolsVersion '27.0.1'
    defaultConfig {
        applicationId "com.dryseed.dstracker"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support.constraint:constraint-layout:1.1.1'
    testCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test:runner:1.0.2'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:3.0.2'

    compile project(':dstrackerimp')

    //compile project(':testlibrary')
    //compile(name: 'testlibrary', ext: 'aar')
}

dsTrackerConfig {
    isDebug = true
    watchTaskTimeCost = true
}

// 278405780 gradle全局只有一个，值是固定的
println "In DryseedDemo, gradle id is : " + gradle.hashCode()
// C:\Users\User\.gradle\wrapper\dists\gradle-3.3-all\55gk2rcmfc6p2dg9u9ohc3hw9\gradle-3.3 ： 在哪个目录存储的gradle可执行程序
println "Home Dir : " + gradle.gradleHomeDir
// C:\Users\User\.gradle ： gradle自己设置的目录，里边存储了一些配置文件，以及编译过程中的缓存文件，生成的类文件，编译中依赖的插件等等。
println "User Home Dir : " + gradle.gradleUserHomeDir
// null
println "Parent : " + gradle.parent
// [:app:assembleDebug, :buildsrc:assemble]
println "StartParameter.taskNames ：" + gradle.startParameter.taskNames
// root project 'DsTracker'
println "RootProject : " + gradle.rootProject
// ext property configured at Project/build.gradle
println "ext.dryseed : " + project.dryseed
// project.tasks
print "tasks name : "
project.tasks.each {
    print it.name + " "
}
println()
println "android.bootClasspath.get(0).absolutePath : " + android.bootClasspath.get(0).absolutePath

task dsTask {
    println "============ dsTask start ============"
}
